{"ast":null,"code":"var _jsxFileName = \"/Users/souadyakubu/Documents/senior-project/proj/src/components/BookReader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport books from './Books';\nimport './BookReader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookReader = () => {\n  _s();\n  const {\n    bookTitle\n  } = useParams();\n  const book = books.find(b => b.title === decodeURIComponent(bookTitle));\n  const [selectedChapter, setSelectedChapter] = useState('');\n  const [userAnswers, setUserAnswers] = useState({});\n  if (!book) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  const chapters = [{\n    id: '1',\n    title: 'Chapter 1'\n  }, {\n    id: '2',\n    title: 'Chapter 2'\n  }, {\n    id: '3',\n    title: 'Chapter 3'\n  }];\n  const chapterQuestions = {\n    '1': [{\n      question: \"What is the main theme?\",\n      answer: \"Theme1\"\n    }, {\n      question: \"Who are the key characters?\",\n      answer: \"Characters1\"\n    }],\n    '2': [{\n      question: \"What challenges are introduced?\",\n      answer: \"Challenges\"\n    }, {\n      question: \"How does the character react?\",\n      answer: \"Reaction\"\n    }],\n    '3': [{\n      question: \"What lessons are learned?\",\n      answer: \"Lesson\"\n    }, {\n      question: \"How does the chapter conclude?\",\n      answer: \"Conclusion\"\n    }]\n  };\n  const handleChapterChange = e => {\n    const chapterId = e.target.value;\n    setSelectedChapter(chapterId);\n    setUserAnswers({});\n  };\n  const handleAnswerChange = (index, value) => {\n    setUserAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [index]: value\n    }));\n  };\n  const checkAnswer = (index, correctAnswer) => {\n    return userAnswers[index] && userAnswers[index].toLowerCase() === correctAnswer.toLowerCase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-reader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this), \" \", book.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: book.link,\n      title: book.title,\n      width: \"100%\",\n      height: \"600px\",\n      style: {\n        border: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChapterChange,\n        value: selectedChapter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a chapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: chapter.id,\n          children: chapter.title\n        }, chapter.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), selectedChapter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-questions\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chapterQuestions[selectedChapter].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userAnswers[index] || '',\n              onChange: e => handleAnswerChange(index, e.target.value),\n              placeholder: \"Type your answer here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert(checkAnswer(index, item.answer) ? \"Correct!\" : \"Try again!\"),\n              children: \"Check Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(BookReader, \"M5JOMTFj3GBEm5kNyZkGmENlt54=\", false, function () {\n  return [useParams];\n});\n_c = BookReader;\nexport default BookReader;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import books from './Books';\n// import './BookReader.css';\n\n// const BookReader = () => {\n//     const { bookTitle } = useParams();\n//     const book = books.find(b => b.title === decodeURIComponent(bookTitle));\n//     const [chapter, setChapter] = useState(1);\n//     const [scriptureContent, setScriptureContent] = useState('');\n//     const version = 'kjv'; // Default version, you can make this dynamic if needed\n\n//     if (!book) {\n//         return <h2>Book not found</h2>;\n//     }\n\n//     // Fetch the scripture content from CCEL API based on the selected chapter\n//     const fetchScripture = async () => {\n//         const passage = `${book.scriptureReference}_${chapter}`;\n//         const url = `https://ccel.org/ajax/scripture?version=${version}&passage=${passage}`;\n\n//         try {\n//             const response = await fetch(url);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch scripture');\n//             }\n//             const html = await response.text();\n//             setScriptureContent(html);\n//         } catch (error) {\n//             console.error(\"Error fetching scripture:\", error);\n//         }\n//     };\n\n//     // Fetch scripture content whenever the chapter changes\n//     useEffect(() => {\n//         fetchScripture();\n//     }, [chapter]);\n\n//     return (\n//         <div className=\"book-reader\">\n//             <h2>{book.title}</h2>\n//             <p><strong>Author:</strong> {book.author}</p>\n\n//             {/* Chapter selection */}\n//             <div>\n//                 <label htmlFor=\"chapterSelect\">Select a Chapter: </label>\n//                 <select\n//                     id=\"chapterSelect\"\n//                     value={chapter}\n//                     onChange={(e) => setChapter(parseInt(e.target.value))}\n//                 >\n//                     {Array.from({ length: book.totalChapters }, (_, i) => (\n//                         <option key={i + 1} value={i + 1}>\n//                             Chapter {i + 1}\n//                         </option>\n//                     ))}\n//                 </select>\n//             </div>\n\n//             {/* Display fetched scripture content */}\n//             <div className=\"scripture-content\" dangerouslySetInnerHTML={{ __html: scriptureContent }} />\n//         </div>\n//     );\n// };\n\n// export default BookReader;\nvar _c;\n$RefreshReg$(_c, \"BookReader\");","map":{"version":3,"names":["React","useState","useParams","books","jsxDEV","_jsxDEV","BookReader","_s","bookTitle","book","find","b","title","decodeURIComponent","selectedChapter","setSelectedChapter","userAnswers","setUserAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","chapters","id","chapterQuestions","question","answer","handleChapterChange","e","chapterId","target","value","handleAnswerChange","index","prevAnswers","checkAnswer","correctAnswer","toLowerCase","className","author","src","link","width","height","style","border","onChange","map","chapter","item","type","placeholder","onClick","alert","_c","$RefreshReg$"],"sources":["/Users/souadyakubu/Documents/senior-project/proj/src/components/BookReader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport books from './Books';\nimport './BookReader.css';\n\nconst BookReader = () => {\n    const { bookTitle } = useParams();\n    const book = books.find(b => b.title === decodeURIComponent(bookTitle));\n\n    const [selectedChapter, setSelectedChapter] = useState('');\n    const [userAnswers, setUserAnswers] = useState({});\n\n    if (!book) {\n        return <h2>Book not found</h2>;\n    }\n\n    const chapters = [\n        { id: '1', title: 'Chapter 1' },\n        { id: '2', title: 'Chapter 2' },\n        { id: '3', title: 'Chapter 3' },\n    ];\n\n    const chapterQuestions = {\n        '1': [\n            { question: \"What is the main theme?\", answer: \"Theme1\" },\n            { question: \"Who are the key characters?\", answer: \"Characters1\" }\n        ],\n        '2': [\n            { question: \"What challenges are introduced?\", answer: \"Challenges\" },\n            { question: \"How does the character react?\", answer: \"Reaction\" }\n        ],\n        '3': [\n            { question: \"What lessons are learned?\", answer: \"Lesson\" },\n            { question: \"How does the chapter conclude?\", answer: \"Conclusion\" }\n        ]\n    };\n\n    const handleChapterChange = (e) => {\n        const chapterId = e.target.value;\n        setSelectedChapter(chapterId);\n        setUserAnswers({});\n    };\n\n    const handleAnswerChange = (index, value) => {\n        setUserAnswers(prevAnswers => ({ ...prevAnswers, [index]: value }));\n    };\n\n    const checkAnswer = (index, correctAnswer) => {\n        return userAnswers[index] && userAnswers[index].toLowerCase() === correctAnswer.toLowerCase();\n    };\n\n    return (\n        <div className=\"book-reader\">\n            <h2>{book.title}</h2>\n            <p><strong>Author:</strong> {book.author}</p>\n            <iframe\n                src={book.link}\n                title={book.title}\n                width=\"100%\"\n                height=\"600px\"\n                style={{ border: 'none' }}\n            />\n\n            <div className=\"chapter-selection\">\n                <h3>Select a Chapter</h3>\n                <select onChange={handleChapterChange} value={selectedChapter}>\n                    <option value=\"\">Select a chapter</option>\n                    {chapters.map((chapter) => (\n                        <option key={chapter.id} value={chapter.id}>{chapter.title}</option>\n                    ))}\n                </select>\n\n                {selectedChapter && (\n                    <div className=\"chapter-questions\">\n\n                        <ul>\n                            {chapterQuestions[selectedChapter].map((item, index) => (\n                                <li key={index}>\n                                    <p>{item.question}</p>\n                                    <input\n                                        type=\"text\"\n                                        value={userAnswers[index] || ''}\n                                        onChange={(e) => handleAnswerChange(index, e.target.value)}\n                                        placeholder=\"Type your answer here\"\n                                    />\n                                    <button onClick={() => alert(checkAnswer(index, item.answer) ? \"Correct!\" : \"Try again!\")}>\n                                        Check Answer\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BookReader;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import books from './Books';\n// import './BookReader.css';\n\n// const BookReader = () => {\n//     const { bookTitle } = useParams();\n//     const book = books.find(b => b.title === decodeURIComponent(bookTitle));\n//     const [chapter, setChapter] = useState(1);\n//     const [scriptureContent, setScriptureContent] = useState('');\n//     const version = 'kjv'; // Default version, you can make this dynamic if needed\n\n//     if (!book) {\n//         return <h2>Book not found</h2>;\n//     }\n\n//     // Fetch the scripture content from CCEL API based on the selected chapter\n//     const fetchScripture = async () => {\n//         const passage = `${book.scriptureReference}_${chapter}`;\n//         const url = `https://ccel.org/ajax/scripture?version=${version}&passage=${passage}`;\n\n//         try {\n//             const response = await fetch(url);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch scripture');\n//             }\n//             const html = await response.text();\n//             setScriptureContent(html);\n//         } catch (error) {\n//             console.error(\"Error fetching scripture:\", error);\n//         }\n//     };\n\n//     // Fetch scripture content whenever the chapter changes\n//     useEffect(() => {\n//         fetchScripture();\n//     }, [chapter]);\n\n//     return (\n//         <div className=\"book-reader\">\n//             <h2>{book.title}</h2>\n//             <p><strong>Author:</strong> {book.author}</p>\n\n//             {/* Chapter selection */}\n//             <div>\n//                 <label htmlFor=\"chapterSelect\">Select a Chapter: </label>\n//                 <select\n//                     id=\"chapterSelect\"\n//                     value={chapter}\n//                     onChange={(e) => setChapter(parseInt(e.target.value))}\n//                 >\n//                     {Array.from({ length: book.totalChapters }, (_, i) => (\n//                         <option key={i + 1} value={i + 1}>\n//                             Chapter {i + 1}\n//                         </option>\n//                     ))}\n//                 </select>\n//             </div>\n\n//             {/* Display fetched scripture content */}\n//             <div className=\"scripture-content\" dangerouslySetInnerHTML={{ __html: scriptureContent }} />\n//         </div>\n//     );\n// };\n\n// export default BookReader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}